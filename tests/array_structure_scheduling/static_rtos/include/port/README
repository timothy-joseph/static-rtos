int port_getcontext(mcu_context_t *ucp);

This function is used to get the current context of the cpu and put it into
ucp.
Returns 0 on success and -1 on failure

---

int port_setcontext(const mcu_context_t *ucp);

This function is used to set the current context of the cpu to ucp.
Returns 0 on success (or doesn't return on success) and -1 on failure

---

void port_makecontext(mcu_context_t *ucp, void *stack, size_t stack_size,
		      mcu_context_t *successor_ctx, void (*func)(void *),
		      void *args);

This function is used to set the context of ucp to point to func with argument
args. The stack of this context will be stack with size stack_size.
successor_ctx is the return context. On linux, the args argument doesn't work

Before calling this function, call port_getcontext to get all other registers
initialized

---

int port_swapcontext(mcu_context_t *oucp, const mcu_context_t *cp);

This function saves the current context into oucp and loads the context from cp
Returns -1 on error and doesn't return on success
